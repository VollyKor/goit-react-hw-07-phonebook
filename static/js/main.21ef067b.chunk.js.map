{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","service/request.js","redux/phonebook/phonebook-operations.jsx","redux/phonebook/phonebook-actions.jsx","redux/phonebook/phonebook-reducer.jsx","redux/phonebook/phonebook-selectors.jsx","Components/Form/Form.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","getContacts","a","get","contacts","addContact","contactObj","post","response","console","log","deleteContact","ObjId","delete","fetchContacts","createAsyncThunk","request","data","addContactR","createAction","deleteContactR","setContactR","setFilterR","phonebookActions","contactsReducer","createReducer","state","payload","filter","id","_","fulfilled","filterReducer","isLoading","pending","rejected","errorMessage","message","phonebookReducer","combineReducers","filterQ","error","phonebook","getFilter","getVisibleContacts","createSelector","filterQuery","name","toLowerCase","includes","Form","useState","setName","phoneNumber","setPhoneNumber","useSelector","phonebookSelectors","dispatch","useDispatch","className","s","form","onSubmit","e","preventDefault","length","some","contact","alert","uuidv4","status","phonebookOperations","resetForm","label","type","input","value","onChange","target","btn","ContactList","visibleContatcs","contactId","list","map","el","item","itemValue","onClick","Filter","App","useEffect","contactsOperations","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21ef067b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Bzhr\",\"itemDesc\":\"ContactList_itemDesc__1GFfO\",\"itemValue\":\"ContactList_itemValue__RgqbF\",\"btn\":\"ContactList_btn__1GJLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__23gk5\",\"label\":\"Filter_label__YS-jK\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const contacts = await axios.get('/contacts');\r\n    return contacts;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addContact = async contactObj => {\r\n  try {\r\n    const response = await axios.post('/contacts', contactObj);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async ObjId => {\r\n  try {\r\n    const response = await axios.delete(`/contacts/${ObjId}`);\r\n    return response;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { request } from 'service';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'phonebook/fetchBooks',\r\n  async () => {\r\n    try {\r\n      const contacts = await request.getContacts();\r\n      return contacts.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n);\r\n\r\n// export const addContact = createAsyncThunk(\r\n//   'phonebook/addContact',\r\n//   async contactObj => {\r\n//     try {\r\n//       const response = await request.addContact(contactObj);\r\n//       return response;\r\n//     } catch (error) {\r\n//       throw error;\r\n//     }\r\n//   },\r\n// );\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// redux toolkit\r\n// =========================\r\nexport const addContactR = createAction('phonebook/addContact');\r\nexport const deleteContactR = createAction('phonebook/deleteContact');\r\nexport const setContactR = createAction('phonebook/setContacts');\r\nexport const setFilterR = createAction('phonebook/setFilter');\r\n\r\n// Async actions\r\n// ==========================\r\n// export const fetchContactsRequest = createAction(\r\n//   'phonebook/fetchBooks/pending',\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   'phonebook/fetchBooks/fullfilled',\r\n// );\r\n// export const fetchContactsError = createAction('phonebook/fetchBooks/rejected');\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { fetchContacts } from './phonebook-operations';\r\nimport { phonebookActions } from 'redux/phonebook';\r\n\r\nconst {\r\n  addContactR,\r\n  deleteContactR,\r\n  setFilterR,\r\n  setContactR,\r\n} = phonebookActions;\r\n\r\n//  use json-server\r\nconst contactsReducer = createReducer([], {\r\n  [addContactR]: (state, { payload }) => [...state, payload],\r\n\r\n  [deleteContactR]: (state, { payload }) => {\r\n    const newContactsArray = state.filter(({ id }) => id !== payload);\r\n    return newContactsArray;\r\n  },\r\n\r\n  [setContactR]: (_, { payload }) => payload,\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [setFilterR]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst errorMessage = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload.message,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filterQ: filterReducer,\r\n  isLoading,\r\n  error: errorMessage,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filterQ;\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const filterQuery = getFilter(state);\r\n//   const filteredArr = getContacts(state).filter(({ name }) =>\r\n//     name.toLowerCase().includes(filterQuery),\r\n//   );\r\n//   return filteredArr;\r\n// };\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filterQuery) => {\r\n    const filteredArr = contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterQuery),\r\n    );\r\n    return filteredArr;\r\n  },\r\n);\r\n","import s from './Form.module.css';\r\nimport { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { phonebookSelectors } from 'redux/phonebook';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { request } from 'service';\r\nimport { phonebookOperations } from 'redux/phonebook';\r\n\r\nexport default function Form(/*{ onSubmit }*/) {\r\n  const [name, setName] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  const contacts = useSelector(phonebookSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name.length > 0 && phoneNumber.length > 0) {\r\n      if (\r\n        contacts.some(contact => {\r\n          return contact.name.includes(name);\r\n        })\r\n      ) {\r\n        return alert(`${name} is already in contacts`);\r\n      }\r\n\r\n      const response = async () => {\r\n        const response = await request.addContact({\r\n          id: uuidv4(),\r\n          name,\r\n          phoneNumber,\r\n        });\r\n        if (response.status === 201) {\r\n          dispatch(phonebookOperations.fetchContacts());\r\n          resetForm();\r\n        } else {\r\n          alert('someting goes wrong');\r\n        }\r\n        return response;\r\n      };\r\n      response();\r\n    }\r\n  };\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={e => {\r\n            setName(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        <span>Phone number</span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={phoneNumber}\r\n          onChange={e => {\r\n            setPhoneNumber(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.btn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setPhoneNumber('');\r\n  }\r\n}\r\n","import s from './ContactList.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { phonebookSelectors } from 'redux/phonebook';\r\nimport { request } from 'service';\r\nimport { phonebookOperations } from 'redux/phonebook';\r\n\r\nexport default function ContactList() {\r\n  const { getVisibleContacts } = phonebookSelectors;\r\n\r\n  const visibleContatcs = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = async contactId => {\r\n    const response = await request.deleteContact(contactId);\r\n    if (response.status === 200) {\r\n      dispatch(phonebookOperations.fetchContacts());\r\n    } else {\r\n      alert('something goes wrong');\r\n    }\r\n    return response;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ul className={s.list}>\r\n        {visibleContatcs.map(el => {\r\n          return (\r\n            <li className={s.item} key={el.id}>\r\n              <p className={s.itemValue}>\r\n                <span> {el.name}: </span>\r\n                <span>{el.phoneNumber}</span>\r\n              </p>\r\n              <button className={s.btn} onClick={() => deleteContact(el.id)}>\r\n                delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\nimport { setFilterR } from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter(/*{ setFilter, data: { filterQ } }*/) {\r\n  const filterQ = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <label className={s.label}>\r\n        <span>Filter </span>\r\n        <input\r\n          type=\"text\"\r\n          className={s.input}\r\n          value={filterQ}\r\n          onChange={e => dispatch(setFilterR(e.target.value))}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import './App.module.css';\r\nimport React, { useEffect } from 'react';\r\nimport Form from './Components/Form/Form';\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport Filter from './Components/Filter/Filter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as contactsOperations from './redux/phonebook/phonebook-operations';\r\nimport { phonebookActions } from 'redux/phonebook';\r\nimport { getContacts } from './redux/phonebook/phonebook-selectors';\r\n\r\nfunction App() {\r\n  const { setContactR } = phonebookActions;\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const setContacts = contactsArr => dispatch(setContactR(contactsArr));\r\n\r\n  // get items from ls on first render\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n    // if (localStorage.getItem('contacts') !== null) {\r\n    //   const data = JSON.parse(localStorage.getItem('contacts'));\r\n    //   setContacts(data);\r\n    // }\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   setContacts(getContactsFromDB());\r\n  // }, []);\r\n\r\n  // add items to ls\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <h1>Phone Book</h1>\r\n      <Form />\r\n      <h2>Contact List</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n// vinilla redux\r\n// ======================\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n// export default store;\r\n\r\n//  Redux toolkit\r\n// ===============================\r\n\r\nexport default store;\r\n","import './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Form_btn__XrRzD\",\"form\":\"Form_form__10Aad\",\"input\":\"Form_input__2Dno4\",\"label\":\"Form_label__IDocd\"};"],"sourceRoot":""}